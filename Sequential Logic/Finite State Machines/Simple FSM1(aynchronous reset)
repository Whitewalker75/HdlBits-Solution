module top_module(
    input clk,
    input areset,    // Asynchronous reset to state B
    input in,
    output out);//  

    parameter A=0, B=1; 
    reg state, next_state;

    always @(*) begin    // This is a combinational always block
        // State transition logic
        if (in==0&&state==A)begin
            next_state<=B;
        end 
        else if(in==0&&state==B)begin
            next_state<=A;
        end
        else if(in==1&&state==B)begin
            next_state<=B;
        end
        else begin
            next_state<=A;
        end
    end

    always @(posedge clk, posedge areset) begin    // This is a sequential always block
        // State flip-flops with asynchronous reset
        if(areset)
            state<=B;
        else begin 
            state<=next_state;
        end
    end

    // Output logic
    // assign out = (state == ...);
        assign out=(state==A?0:1);

endmodule
