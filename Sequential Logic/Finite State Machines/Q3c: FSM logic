module top_module (
    input clk,
    input [2:0] y,
    input x,
    output Y0,
    output z
);
reg [2:0] state,next_state;
    
    always@(posedge clk)begin
            state <= y;
    end
    
    always@(*)begin
        case(y)
            3'b000:begin
                next_state <= x ? 3'b001:3'b000;
                z <= 0;
            end
            3'b001:begin
                next_state <= x ? 3'b100:3'b001;
                z <= 0;
            end
            3'b010:begin
                next_state <= x ? 3'b001:3'b010;
                z <= 0;
            end
            3'b011:begin
                next_state <= x ? 3'b010:3'b001;
                z <= 1;
            end
            3'b100:begin
                next_state <= x ? 3'b100:3'b011;
                z <= 1;
            end
            default:next_state <= 3'b000;
        endcase
    end
    
    always@(*)begin
        Y0 <= next_state[0];
    end


endmodule
