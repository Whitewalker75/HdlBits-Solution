module top_module(
    input clk,
    input areset,    // Freshly brainwashed Lemmings walk left.
    input bump_left,
    input bump_right,
    output walk_left,
    output walk_right); //  

    // parameter LEFT=0, RIGHT=1, ...
    parameter LEFT=0,RIGHT=1;
    reg state, next_state;

    always @(*) begin
        // State transition logic
        if(bump_left&&bump_right) begin
            next_state = (state==LEFT)?RIGHT:LEFT;
        end
        else if(bump_left)begin 
                next_state = RIGHT;
            end
        else if(bump_right) begin
            next_state = LEFT;
        end
        else begin
                next_state = state;
        end
    end
        

    always @(posedge clk, posedge areset) begin
        if(areset)begin
            state<=LEFT;
        end
            else begin
            state<=next_state;
            end
        // State flip-flops with asynchronous reset
    end

    // Output logic
    // assign walk_left = (state == ...);
    // assign walk_right = (state == ...);

    assign walk_left =(state==LEFT);
    assign walk_right=(state==RIGHT);
endmodule
