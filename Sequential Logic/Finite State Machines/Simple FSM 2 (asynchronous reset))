module top_module(
    input clk,
    input areset,    // Asynchronous reset to OFF
    input j,
    input k,
    output out); //  

    parameter OFF=0, ON=1; 
    reg state, next_state;

    always @(*) begin
       // State transition logic
        if(j==0&&state==OFF)begin
        next_state<=OFF;
       // out<=0;
        end
        else if(j==1&&state==OFF)begin
            next_state<=ON;
         //   out<=1;
        end
        else if(k==0&&state==ON)begin
            next_state<=ON;
           // out<=1;
        end
        else
            next_state<=OFF;
                
    end

    always @(posedge clk, posedge areset) begin
         if (areset)begin
             state<=OFF;
         end
        else begin
            state<=next_state;
        end
    end
        // State flip-flops with asynchronous reset

    // Output logic
    // assign out = (state == ...);

    assign out = (state==OFF?0:1);
endmodule
